{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "6b28da83",
   "metadata": {},
   "outputs": [],
   "source": [
    "class names:\n",
    "    def Sur_Name():\n",
    "        print(\"Dasari\")\n",
    "    \n",
    "    def First_Name():\n",
    "        print(\"Prasanth\")\n",
    "    \n",
    "    def Last_Name():\n",
    "        print(\"Kumar\")\n",
    "        "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "bb98bc62",
   "metadata": {},
   "outputs": [],
   "source": [
    "a = names"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "94ee54e6",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Prasanth\n"
     ]
    }
   ],
   "source": [
    "a.First_Name()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "114efa3a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Kumar\n"
     ]
    }
   ],
   "source": [
    "a.Last_Name()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "5bcf45a1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Dasari\n"
     ]
    }
   ],
   "source": [
    "a.Sur_Name()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "d62ef3d4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[__main__.names, object]"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a.mro()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "5e071cd8",
   "metadata": {},
   "outputs": [],
   "source": [
    "class mongodb:\n",
    "    def connection(self):\n",
    "        print(\"this will help me to connet t mongodb\")\n",
    "    def insret(self):\n",
    "        print(\"this will help ous to insert records\")\n",
    "    def update(self):\n",
    "        print(\"this will help ous to update the records\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "058d00b6",
   "metadata": {},
   "outputs": [],
   "source": [
    "mongo = mongodb()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "47772ab0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "this will help me to connet t mongodb\n"
     ]
    }
   ],
   "source": [
    "mongo.connection()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "0784e892",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "this will help ous to insert records\n"
     ]
    }
   ],
   "source": [
    "mongo.insret()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "fab247bc",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pymongo\n",
    "class mongodb:\n",
    "    def connection(self):\n",
    "        print(\"this will help me to connet t mongodb\")\n",
    "        client = pymongo.MongoClient(\"mongodb+srv://Prasanth:prasanth@cluster0.kljiibr.mongodb.net/?retryWrites=true&w=majority\")\n",
    "        return client\n",
    "    def insret(self):\n",
    "        print(\"this will help ous to insert records\")\n",
    "    def update(self):\n",
    "        print(\"this will help ous to update the records\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "7ef8d487",
   "metadata": {},
   "outputs": [],
   "source": [
    "mongo1 = mongodb()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "f44cbae5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "this will help me to connet t mongodb\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "MongoClient(host=['ac-9radx3x-shard-00-01.kljiibr.mongodb.net:27017', 'ac-9radx3x-shard-00-00.kljiibr.mongodb.net:27017', 'ac-9radx3x-shard-00-02.kljiibr.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', authsource='admin', replicaset='atlas-12bg7z-shard-0', tls=True)"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mongo1.connection()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "991fceba",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "this will help me to connet t mongodb\n"
     ]
    }
   ],
   "source": [
    "conn=mongo1.connection()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "b8932f64",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "MongoClient(host=['ac-9radx3x-shard-00-01.kljiibr.mongodb.net:27017', 'ac-9radx3x-shard-00-00.kljiibr.mongodb.net:27017', 'ac-9radx3x-shard-00-02.kljiibr.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', authsource='admin', replicaset='atlas-12bg7z-shard-0', tls=True)\n"
     ]
    }
   ],
   "source": [
    "print(conn)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "9c797e22",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Print another way \n",
      "Print another way \n",
      "Print another way \n",
      "Print another way \n",
      "Print another way \n",
      "Print another way \n",
      "Print another way \n",
      "Print another way \n",
      "Print another way \n",
      "Print another way \n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(\"Print another way \\n\"*10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "94fc2599",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pymongo\n",
    "class mongodb:\n",
    "    def connection(self,url):\n",
    "        print(\"this will help me to connet t mongodb\")\n",
    "        client = pymongo.MongoClient(url)\n",
    "        return client\n",
    "    def insret(self):\n",
    "        print(\"this will help ous to insert records\")\n",
    "    def update(self):\n",
    "        print(\"this will help ous to update the records\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ed4123b8",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "080bf6ad",
   "metadata": {},
   "outputs": [],
   "source": [
    "mongo1 = mongodb()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "024f3e89",
   "metadata": {},
   "outputs": [
    {
     "ename": "TypeError",
     "evalue": "connection() missing 1 required positional argument: 'url'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
      "Input \u001b[1;32mIn [28]\u001b[0m, in \u001b[0;36m<cell line: 1>\u001b[1;34m()\u001b[0m\n\u001b[1;32m----> 1\u001b[0m \u001b[43mmongo1\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mconnection\u001b[49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\n",
      "\u001b[1;31mTypeError\u001b[0m: connection() missing 1 required positional argument: 'url'"
     ]
    }
   ],
   "source": [
    "mongo1.connection()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "778951dc",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "this will help me to connet t mongodb\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "MongoClient(host=['ac-9radx3x-shard-00-01.kljiibr.mongodb.net:27017', 'ac-9radx3x-shard-00-00.kljiibr.mongodb.net:27017', 'ac-9radx3x-shard-00-02.kljiibr.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', authsource='admin', replicaset='atlas-12bg7z-shard-0', tls=True)"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mongo1.connection(\"mongodb+srv://Prasanth:prasanth@cluster0.kljiibr.mongodb.net/?retryWrites=true&w=majority\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "a5d29e7f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "this will help me to connet t mongodb\n"
     ]
    }
   ],
   "source": [
    "con=mongo1.connection(\"mongodb+srv://Prasanth:prasanth@cluster0.kljiibr.mongodb.net/?retryWrites=true&w=majority\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "b005ba9c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "MongoClient(host=['ac-9radx3x-shard-00-01.kljiibr.mongodb.net:27017', 'ac-9radx3x-shard-00-00.kljiibr.mongodb.net:27017', 'ac-9radx3x-shard-00-02.kljiibr.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', authsource='admin', replicaset='atlas-12bg7z-shard-0', tls=True)"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "con"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b6471b5c",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "e488b41e",
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'Prasanth' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "Input \u001b[1;32mIn [31]\u001b[0m, in \u001b[0;36m<cell line: 1>\u001b[1;34m()\u001b[0m\n\u001b[1;32m----> 1\u001b[0m conn\u001b[38;5;241m=\u001b[39mmongo1\u001b[38;5;241m.\u001b[39mconnection(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mmongodb+srv://\u001b[39m\u001b[38;5;124m\"\u001b[39m \u001b[38;5;241m+\u001b[39m\u001b[43mPrasanth\u001b[49m\u001b[38;5;241m+\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m:\u001b[39m\u001b[38;5;124m\"\u001b[39m \u001b[38;5;241m+\u001b[39mprasanth\u001b[38;5;241m+\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m@cluster0.kljiibr.mongodb.net/?retryWrites=true&w=majority\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n",
      "\u001b[1;31mNameError\u001b[0m: name 'Prasanth' is not defined"
     ]
    }
   ],
   "source": [
    "conn=mongo1.connection(\"mongodb+srv://\" +Prasanth+ \":\" +prasanth+ \"@cluster0.kljiibr.mongodb.net/?retryWrites=true&w=majority\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "2dd40eb0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Print another way \n",
      "Print another way \n",
      "Print another way \n",
      "Print another way \n",
      "Print another way \n",
      "Print another way \n",
      "Print another way \n",
      "Print another way \n",
      "Print another way \n",
      "Print another way \n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(\"Print another way \\n\"*10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "41bf9551",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pymongo\n",
    "class mongodb:\n",
    "    def connection(self,user_id,password):\n",
    "        print(\"this will help me to connet to mongodb\")\n",
    "        url=\"mongodb+srv://\"+user_id+\":\"+password+\"@cluster0.kljiibr.mongodb.net/?retryWrites=true&w=majority\"\n",
    "        client = pymongo.MongoClient(url)\n",
    "        return client\n",
    "    def insret(self):\n",
    "        print(\"this will help ous to insert records\")\n",
    "    def update(self):\n",
    "        print(\"this will help ous to update the records\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "e69f7da5",
   "metadata": {},
   "outputs": [],
   "source": [
    "mongo2=mongodb()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "b67ba6bc",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "this will help me to connet to mongodb\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "MongoClient(host=['ac-9radx3x-shard-00-01.kljiibr.mongodb.net:27017', 'ac-9radx3x-shard-00-00.kljiibr.mongodb.net:27017', 'ac-9radx3x-shard-00-02.kljiibr.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', authsource='admin', replicaset='atlas-12bg7z-shard-0', tls=True)"
      ]
     },
     "execution_count": 55,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mongo2.connection(\"Prasanth\",\"prasanth\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "22b1478b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "this will help me to connet to mongodb\n"
     ]
    }
   ],
   "source": [
    "conn=mongo2.connection(\"Prasanth\",\"prasanth\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "10e6b765",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "MongoClient(host=['ac-9radx3x-shard-00-01.kljiibr.mongodb.net:27017', 'ac-9radx3x-shard-00-00.kljiibr.mongodb.net:27017', 'ac-9radx3x-shard-00-02.kljiibr.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', authsource='admin', replicaset='atlas-12bg7z-shard-0', tls=True)"
      ]
     },
     "execution_count": 57,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "conn"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "604bee08",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Print another way \n",
      "Print another way \n",
      "Print another way \n",
      "Print another way \n",
      "Print another way \n",
      "Print another way \n",
      "Print another way \n",
      "Print another way \n",
      "Print another way \n",
      "Print another way \n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(\"Print another way \\n\"*10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "id": "882bdb7f",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pymongo\n",
    "class mongodb:\n",
    "    \n",
    "    def connection(self,user_id,password):\n",
    "        print(\"this will help me to connet to mongodb\")\n",
    "        url=\"mongodb+srv://\"+user_id+\":\"+password+\"@cluster0.kljiibr.mongodb.net/?retryWrites=true&w=majority\"\n",
    "        client = pymongo.MongoClient(url)\n",
    "        return client\n",
    "    \n",
    "    def insret(self,conn,data):\n",
    "        print(\"this will help ous to insert records\")\n",
    "        db=conn['mongodb_test']\n",
    "        coll=db['mongo_record']\n",
    "        coll.insert_one(data)\n",
    "        \n",
    "    def update(self):\n",
    "        print(\"this will help ous to update the records\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "id": "16a72a5e",
   "metadata": {},
   "outputs": [],
   "source": [
    "mongo3=mongodb()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "id": "d8e75086",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "this will help me to connet to mongodb\n"
     ]
    }
   ],
   "source": [
    "conn=mongo3.connection(\"Prasanth\",\"prasanth\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "id": "42e46780",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "MongoClient(host=['ac-9radx3x-shard-00-01.kljiibr.mongodb.net:27017', 'ac-9radx3x-shard-00-00.kljiibr.mongodb.net:27017', 'ac-9radx3x-shard-00-02.kljiibr.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', authsource='admin', replicaset='atlas-12bg7z-shard-0', tls=True)"
      ]
     },
     "execution_count": 75,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "conn"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "id": "57d17ee4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "this will help me to connet to mongodb\n",
      "this will help ous to insert records\n"
     ]
    }
   ],
   "source": [
    "mongo3.insret(mongo3.connection(\"Prasanth\",\"prasanth\"),{\"Name\":\"Prasanthkumae dasari\"})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "id": "b2ea1501",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Print another way \n",
      "Print another way \n",
      "Print another way \n",
      "Print another way \n",
      "Print another way \n",
      "Print another way \n",
      "Print another way \n",
      "Print another way \n",
      "Print another way \n",
      "Print another way \n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(\"Print another way \\n\"*10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "id": "7c3bffde",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pymongo\n",
    "class mongodb:\n",
    "    \n",
    "    def __init__(self,user_id,password):\n",
    "        self.user_id=user_id\n",
    "        self.password=password\n",
    "    \n",
    "    def connection(self):\n",
    "        print(\"this will help me to connet to mongodb\")\n",
    "        url=\"mongodb+srv://\"+self.user_id+\":\"+self.password+\"@cluster0.kljiibr.mongodb.net/?retryWrites=true&w=majority\"\n",
    "        client = pymongo.MongoClient(url)\n",
    "        return client\n",
    "    \n",
    "    def insret(self,data):\n",
    "        print(\"this will help ous to insert records\")\n",
    "        conn = self.connection()\n",
    "        db=conn['mongodb_test']\n",
    "        coll=db['mongo_record']\n",
    "        coll.insert_one(data)\n",
    "        \n",
    "    def update(self):\n",
    "        print(\"this will help ous to update the records\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 100,
   "id": "5deddd3b",
   "metadata": {},
   "outputs": [],
   "source": [
    "mongo4=mongodb(\"Prasanth\",\"prasanth\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "id": "647979ee",
   "metadata": {},
   "outputs": [
    {
     "ename": "TypeError",
     "evalue": "'str' object is not callable",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
      "Input \u001b[1;32mIn [101]\u001b[0m, in \u001b[0;36m<cell line: 1>\u001b[1;34m()\u001b[0m\n\u001b[1;32m----> 1\u001b[0m \u001b[43mmongo4\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43muser_id\u001b[49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\n",
      "\u001b[1;31mTypeError\u001b[0m: 'str' object is not callable"
     ]
    }
   ],
   "source": [
    "mongo4.user_id()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "id": "1d83707d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'Prasanth'"
      ]
     },
     "execution_count": 102,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mongo4.user_id"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "id": "8efdfc71",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<bound method mongodb.connection of <__main__.mongodb object at 0x000001436A623130>>"
      ]
     },
     "execution_count": 103,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mongo4.connection"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 104,
   "id": "f2f2dea0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "this will help me to connet to mongodb\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "MongoClient(host=['ac-9radx3x-shard-00-01.kljiibr.mongodb.net:27017', 'ac-9radx3x-shard-00-00.kljiibr.mongodb.net:27017', 'ac-9radx3x-shard-00-02.kljiibr.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', authsource='admin', replicaset='atlas-12bg7z-shard-0', tls=True)"
      ]
     },
     "execution_count": 104,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mongo4.connection()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 105,
   "id": "741e61e9",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "this will help ous to insert records\n",
      "this will help me to connet to mongodb\n"
     ]
    },
    {
     "ename": "TypeError",
     "evalue": "document must be an instance of dict, bson.son.SON, bson.raw_bson.RawBSONDocument, or a type that inherits from collections.MutableMapping",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
      "Input \u001b[1;32mIn [105]\u001b[0m, in \u001b[0;36m<cell line: 1>\u001b[1;34m()\u001b[0m\n\u001b[1;32m----> 1\u001b[0m \u001b[43mmongo4\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43minsret\u001b[49m\u001b[43m(\u001b[49m\u001b[43mconn\u001b[49m\u001b[43m)\u001b[49m\n",
      "Input \u001b[1;32mIn [99]\u001b[0m, in \u001b[0;36mmongodb.insret\u001b[1;34m(self, data)\u001b[0m\n\u001b[0;32m     17\u001b[0m db\u001b[38;5;241m=\u001b[39mconn[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mmongodb_test\u001b[39m\u001b[38;5;124m'\u001b[39m]\n\u001b[0;32m     18\u001b[0m coll\u001b[38;5;241m=\u001b[39mdb[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mmongo_record\u001b[39m\u001b[38;5;124m'\u001b[39m]\n\u001b[1;32m---> 19\u001b[0m \u001b[43mcoll\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43minsert_one\u001b[49m\u001b[43m(\u001b[49m\u001b[43mdata\u001b[49m\u001b[43m)\u001b[49m\n",
      "File \u001b[1;32m~\\anaconda3\\lib\\site-packages\\pymongo\\collection.py:622\u001b[0m, in \u001b[0;36mCollection.insert_one\u001b[1;34m(self, document, bypass_document_validation, session, comment)\u001b[0m\n\u001b[0;32m    574\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21minsert_one\u001b[39m(\n\u001b[0;32m    575\u001b[0m     \u001b[38;5;28mself\u001b[39m,\n\u001b[0;32m    576\u001b[0m     document: Union[_DocumentType, RawBSONDocument],\n\u001b[1;32m   (...)\u001b[0m\n\u001b[0;32m    579\u001b[0m     comment: Optional[Any] \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m,\n\u001b[0;32m    580\u001b[0m ) \u001b[38;5;241m-\u001b[39m\u001b[38;5;241m>\u001b[39m InsertOneResult:\n\u001b[0;32m    581\u001b[0m     \u001b[38;5;124;03m\"\"\"Insert a single document.\u001b[39;00m\n\u001b[0;32m    582\u001b[0m \n\u001b[0;32m    583\u001b[0m \u001b[38;5;124;03m      >>> db.test.count_documents({'x': 1})\u001b[39;00m\n\u001b[1;32m   (...)\u001b[0m\n\u001b[0;32m    620\u001b[0m \u001b[38;5;124;03m    .. versionadded:: 3.0\u001b[39;00m\n\u001b[0;32m    621\u001b[0m \u001b[38;5;124;03m    \"\"\"\u001b[39;00m\n\u001b[1;32m--> 622\u001b[0m     \u001b[43mcommon\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mvalidate_is_document_type\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mdocument\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mdocument\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m    623\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m (\u001b[38;5;28misinstance\u001b[39m(document, RawBSONDocument) \u001b[38;5;129;01mor\u001b[39;00m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m_id\u001b[39m\u001b[38;5;124m\"\u001b[39m \u001b[38;5;129;01min\u001b[39;00m document):\n\u001b[0;32m    624\u001b[0m         document[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m_id\u001b[39m\u001b[38;5;124m\"\u001b[39m] \u001b[38;5;241m=\u001b[39m ObjectId()  \u001b[38;5;66;03m# type: ignore[index]\u001b[39;00m\n",
      "File \u001b[1;32m~\\anaconda3\\lib\\site-packages\\pymongo\\common.py:521\u001b[0m, in \u001b[0;36mvalidate_is_document_type\u001b[1;34m(option, value)\u001b[0m\n\u001b[0;32m    519\u001b[0m \u001b[38;5;124;03m\"\"\"Validate the type of method arguments that expect a MongoDB document.\"\"\"\u001b[39;00m\n\u001b[0;32m    520\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(value, (abc\u001b[38;5;241m.\u001b[39mMutableMapping, RawBSONDocument)):\n\u001b[1;32m--> 521\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mTypeError\u001b[39;00m(\n\u001b[0;32m    522\u001b[0m         \u001b[38;5;124m\"\u001b[39m\u001b[38;5;132;01m%s\u001b[39;00m\u001b[38;5;124m must be an instance of dict, bson.son.SON, \u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m    523\u001b[0m         \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mbson.raw_bson.RawBSONDocument, or \u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m    524\u001b[0m         \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124ma type that inherits from \u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m    525\u001b[0m         \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mcollections.MutableMapping\u001b[39m\u001b[38;5;124m\"\u001b[39m \u001b[38;5;241m%\u001b[39m (option,)\n\u001b[0;32m    526\u001b[0m     )\n",
      "\u001b[1;31mTypeError\u001b[0m: document must be an instance of dict, bson.son.SON, bson.raw_bson.RawBSONDocument, or a type that inherits from collections.MutableMapping"
     ]
    }
   ],
   "source": [
    "mongo4.insret(conn)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "id": "e1da06c8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "this will help ous to insert records\n",
      "this will help me to connet to mongodb\n"
     ]
    }
   ],
   "source": [
    "mongo4.insret({\"Nmae\":\"dasari\"})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d9d512fd",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
